# constant variables for X-server files
declare xfile_egpu=/etc/X11/xorg.conf.egpu

# constant variables for chrome config files
declare flags=$HOME/.config/chrome-flags.conf
declare configdir=$HOME/.dotfiles
declare flags_egpu=$configdir/chrome/chrome-flags.egpu
declare flags_internal=$configdir/chrome/chrome-flags.internal

# initialize empty variables
declare -A gpus=()
declare gpu_connected=0

# read the connected GPUs and put them into the "gpus" associative array
function read_gpus() {

	# empty the gpus array
	gpus=()

	declare lines=$(lspci -d ::0300 && lspci -d ::0302)
	while read -r line ; do
		declare name=$(echo $line | grep -o -e "[^:]*$")
		declare bus=$(echo $line | grep -o -e "^[^ ]*")

		# The bus IDs in hex
		declare bus1h=${bus:0:2}
		declare bus2h=${bus:3:2}
		declare bus3h=${bus:6:1}

		# The bus IDs in dec
		declare bus1d=$((16#$bus1h))
		declare bus2d=$((16#$bus2h))
		declare bus3d=$((16#$bus3h))

		# Remove the whitespace at the beginning of the name
		# And concatenate bus IDs
		bus="${bus1d}:${bus2d}:${bus3d}"
		name=${name:1}

		# Put the result into the gpus array
		gpus+=( [$bus]=$name )
	done <<< $lines
	return
}

# returns 1 if egpu is connected, 0 if not
function is_egpu_connected() {

	# read pci id from xorg.conf.egpu
	declare egpu_pci_id=$(cat $xfile_egpu | grep -Ei "BusID" | grep -oEi '[0-9]+\:[0-9]+\:[0-9]+')

	# giving your egpu some time to actually connect
	sleep 5s

	# create an array by splitting the BUS-ID on ':'
	declare busArray=(${egpu_pci_id//:/ })
	declare bus1d=${busArray[0]}
	declare bus2d=${busArray[1]}
	declare bus3d=${busArray[2]}

	# convert dec to hex
	declare bus1h=$(printf "%02x" $bus1d)
	declare bus2h=$(printf "%02x" $bus2d)
	declare bus3h=$(printf "%01x" $bus3d)

	if [ $(lspci | grep -iEc "$bus1h:$bus2h.$bus3h") -eq 1 ]; then
#		print_info "EGPU is ${green}connected${blank}."
		gpu_connected=1
		#return 1
	else
#		print_info "EGPU is ${red}disconnected${blank}."
		gpu_connected=0
	fi
}

read_gpus
is_egpu_connected


if [ -L ${flags} ]; then
    rm -f ${flags}
fi

if [ ${gpu_connected} = 1 ] ; then
		ln -sf ${flags_egpu} ${flags}
        autorandr --load home
        setxkbmap de
	else
	    ln -sf ${flags_internal} ${flags}
fi
